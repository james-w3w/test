version: 2.1

# add your orb below, to be used in integration tests (note: a @dev:alpha
# release must exist.);
orbs:
  serverless: circleci/serverless-framework@1.0.1
  aws-cli: circleci/aws-cli@0.1.22
  node: circleci/node@2.0

jobs:
  sanity_check:
    executor: serverless/default
    steps:
      - checkout
      - run:
          name: echo AWS
          command: echo $AWS_ACCESS_KEY_ID
      - run:
          name: "Setup custom environment variables"
          command: echo 'export MY_ENV_VAR="FOO"' >> $BASH_ENV
      - run: # print the name of the branch we're on
          name: "What branch am I on?"
          command: echo ${CIRCLE_BRANCH}
      # Run another step, the same as above; note that you can
      # invoke environment variable without curly braces.
      - run:
          name: "What branch am I on now?"
          command: echo $CIRCLE_BRANCH
      - run:
          name: "What was my custom environment variable?"
          command: echo ${MY_ENV_VAR}
      - run:
          name: "Print an env var stored in the Project"
          command: echo ${PROJECT_ENV_VAR}
      - run:
          name: "Print an env var stored in a Context"
          command: echo ${CONTEXT_ENV_VAR}
    
  testing:
    executor: node/default
    steps:
      - checkout
      - node/install-packages
      - run:
          name: echo me
          command: echo "Hello"
      - run:
          name: Run Tests
          command: npm run test
  deploying:
    executor: serverless/default
    steps:
      - checkout
      - aws-cli/setup
      - node/install-packages
      - serverless/setup:
          provider: AWS
          app-name: serverless-framework-orb
          org-name: circleci
      - run:
          name: Local invoke add function
          command: serverless invoke local --function add --path 'sampleData/data.json'
      - run:
          command: serverless deploy -v
          name: deploy

workflows:
 pre_test:
  jobs:
    - sanity_check
    - testing
 test:
  jobs:
    - testing
    - deploying
deploy:
    - deploy:
        requires:
          - test
        filters:
            branches:
              only: master
        context: aws_key